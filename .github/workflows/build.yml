name: Build electron App

on:
  push:
    branches:
      - front_desktop

permissions:
  contents: write

jobs:
  
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm install --save-dev @electron-forge/core@latest @electron-forge/maker-squirrel@latest @electron-forge/maker-dmg@latest @electron-forge/maker-deb@latest @electron-forge/maker-rpm@latest @electron-forge/plugin-fuses@latest
      - run: npm install
      - run: npm run maj:front
      - run: npm run make
      - uses: actions/upload-artifact@v4
        with:
          name: electron-build-linux
          path: out/make/

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm install --save-dev @electron-forge/core@latest @electron-forge/maker-squirrel@latest @electron-forge/maker-dmg@latest @electron-forge/maker-deb@latest @electron-forge/maker-rpm@latest @electron-forge/plugin-fuses@latest
      - run: npm install
      - run: npm run maj:front
      - run: npm run make
      - uses: actions/upload-artifact@v4
        with:
          name: electron-build-windows
          path: out/make/

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm install --save-dev @electron-forge/core@latest @electron-forge/maker-squirrel@latest @electron-forge/maker-dmg@latest @electron-forge/maker-deb@latest @electron-forge/maker-rpm@latest @electron-forge/plugin-fuses@latest
      - run: npm install
      - run: npm run maj:front
      - run: npm run make
      - uses: actions/upload-artifact@v4
        with:
          name: electron-build-macos
          path: out/make/

  # release:

  #   runs-on: ubuntu-latest
  #   needs: [build-linux, build-windows, build-macos]

  #   steps:

  #     - uses: actions/checkout@v3

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: electron-build-linux
  #         path: linux/

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: electron-build-windows
  #         path: windows/

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: electron-build-macos
  #         path: macos/

  #     - name: Get version from package.json
  #       run: |
  #         VERSION=$(node -p "require('./package.json').version")
  #         echo "VERSION=$VERSION" >> $GITHUB_ENV

  #     - name: Rename target files
  #       run: |
  #         mkdir release

  #         # macos .dmg
  #         mv macos/Silvernote-${{ env.VERSION }}-arm64.dmg release/silvernote-${{ env.VERSION }}-macos.dmg

  #         # Linux .rpm and .deb
  #         mv linux/rpm/x64/silvernote-${{ env.VERSION }}-1.x86_64.rpm release/silvernote-${{ env.VERSION }}-linux-setup.rpm
  #         mv linux/deb/x64/silvernote_${{ env.VERSION }}_amd64.deb release/silvernote-${{ env.VERSION }}-linux-setup.deb

  #         # Windows .exe
  #         mv windows/squirrel.windows/x64/silvernote-setup.exe release/silvernote-${{ env.VERSION }}-win-setup.exe

  #     - name: Create GitHub Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         tag_name: v${{ env.VERSION }}
  #         name: Silvernote (${{ env.VERSION }})
  #         body: |
  #           Nouvelle version de Silvernote.
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Upload release assets
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         tag_name: v${{ env.VERSION }}
  #         files: |
  #           release/silvernote-${{ env.VERSION }}-linux-setup.rpm
  #           release/silvernote-${{ env.VERSION }}-linux-setup.deb
  #           release/silvernote-${{ env.VERSION }}-win-setup.exe
  #           release/silvernote-${{ env.VERSION }}-macos.dmg
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
